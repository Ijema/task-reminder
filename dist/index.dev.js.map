{"version":3,"sources":["index.js"],"names":["new_task","document","getElementById","task_menu_name","new_task_list","start_id","select_id","reminder_id","alarmIntervalId","app_data","name","task","is_completed","id","app_reminder","change_task","index","findIndex","value","checkAlarm","setReminder","Math","max","length","grabDate","grabTime","resetReminder","style","display","startReminder","set_task","set_task_list","content","i","get_data","className","innerHTML","add_task","push","console","log","get_task_name","get_task_title","change_task_list","position","task_list_input","element","input_value","add_task_list","task_list_length","last_id","delete_task","alert","splice","refresh","audioPlayer","setReminderToTask","selectedTaskName","existingReminder","find","reminder","dateValue","trim","timeValue","date","time","show_date_time","marginTop","now","Date","alarmDate","parseDate","alarmTime","parseTime","getDate","getMonth","getFullYear","getHours","getMinutes","playAlarm","setInterval","dateParts","split","year","parseInt","month","day","timeParts","hours","minutes","paused","play","error","message","setAlarm","clearInterval","clearAlarm","pause","currentTime","addEventListener"],"mappings":"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","sourcesContent":["let new_task = document.getElementById('task_container');\r\nlet task_menu_name = document.getElementById('menu_left');\r\nlet new_task_list = document.getElementById('task_list_container');\r\n\r\nlet start_id = 1;\r\nlet select_id = 0;\r\nlet reminder_id = 0;\r\n// Declare alarm interval ID\r\nlet alarmIntervalId;\r\n\r\n\r\nlet app_data = [\r\n  {\r\n    name:\"Task Name\", \r\n    task:[\r\n      {name: \"Task List\", is_completed: false, id: 1},\r\n    ], \r\n    id:1\r\n  },\r\n];\r\n\r\nlet app_reminder = [];\r\n\r\n//allocates task names the value it has been assigned by the user \r\nconst change_task = id => {\r\n  const index = app_data.findIndex(task => task.id === id);\r\n\r\n  if (index !== -1) {\r\n    select_id = index;\r\n    let name = app_data[select_id].name !== \"Task Name\" ? app_data[select_id].name : \"\";\r\n\r\n    document.getElementById('task_name').value = name;\r\n    checkAlarm(); \r\n    setReminder(); // Call setReminder after setting select_id and clearing date and time fields\r\n    \r\n  } else {\r\n    select_id = Math.max(0, app_data.length - 1);\r\n    document.getElementById('task_name').value = \"\";\r\n  }\r\n  if(grabDate.value === \"\" && grabTime.value === \"\") {\r\n    // Clear and set reminder values\r\n    grabDate.value = \"\";\r\n    grabTime.value = \"\";\r\n    resetReminder.style.display = \"none\";\r\n    grabDate.style.display =\"none\";\r\n    grabTime.style.display = \"none\";\r\n    startReminder.style.display = \"inline-block\";\r\n  }\r\n  else{\r\n    resetReminder.style.display = \"inline-block\";\r\n    grabDate.style.display =\"inline-block\";\r\n    grabTime.style.display = \"inline-block\";\r\n  }\r\n  set_task();\r\n  set_task_list();\r\n};\r\n\r\n\r\n\r\n\r\n// gets tasks from the temporary database and displays tasks on the page\r\nconst set_task = () => {\r\n  let content = '';\r\n\r\n  for(let i=0; i < app_data.length; i++){\r\n    let get_data = app_data[i];\r\n    const className = get_data.id - 1 == select_id ? \"task active\" : \"task\";\r\n    content += `\r\n                <div onclick = \"change_task(${get_data.id})\" class=\"${className}\">\r\n                  ${get_data.name}\r\n                </div>`;\r\n\r\n  }\r\n  new_task.innerHTML = content;\r\n  task_menu_name.innerHTML = app_data[select_id].name;\r\n\r\n}\r\n\r\n// creates a new task and pushes it to the temporary database app_data\r\nconst add_task = () => {\r\n  start_id = app_data.length > 0 ? app_data[app_data.length - 1].id + 1 : 1;\r\n\r\n  app_data.push({\r\n    name: \"Task Name\",\r\n    task: [{ name: \"Task List\", is_completed: false, id: 1 }],\r\n    id: start_id,\r\n  });\r\n\r\n  set_task();\r\n  setReminder();\r\n  console.log(app_data);\r\n};\r\n\r\n\r\n\r\n// gets the task name when it is inputed in the main area and displays it in the menu section\r\nconst get_task_name = () => {\r\n  let get_task_title = document.getElementById('task_name').value;\r\n  app_data[select_id].name = get_task_title;\r\n\r\n  set_task();\r\n  \r\n}\r\n\r\n// grab task list names\r\nconst change_task_list = id => {\r\n  const position = id - 1;\r\n  const task_list_input = document.getElementById(\"task_list_\"+id);\r\n\r\n  app_data[select_id].task[position].name = task_list_input.value;\r\n\r\n}\r\n\r\n\r\n// fetch task lists from database\r\nconst set_task_list = () => {\r\n  let content = '';\r\n\r\n  for (let index = 0; index < app_data[select_id].task.length; index++) {\r\n    const element = app_data[select_id].task[index];\r\n\r\n    const input_value = element.name == \"Task List\" ? \"\" : element.name;\r\n\r\n    content += `<div id=\"task_list\">\r\n                <input type=\"checkbox\" name=\"task_list_name\" id=\"task_list_checkbox\">\r\n                <input type=\"text\" oninput=\"change_task_list(${element.id})\" id=\"task_list_${element.id}\" value=\"${input_value}\" placeholder=\"Task List\">\r\n              </div>`\r\n    \r\n  }\r\n  new_task_list.innerHTML = content;\r\n}\r\n\r\n// Add task_list to task page\r\nconst add_task_list = () => {\r\n  const task_list_length = app_data[select_id].task.length;\r\n  const last_id = app_data[select_id].task[task_list_length - 1].id;\r\n\r\n  app_data[select_id].task.push({name: \"Task List\", is_completed: false, id: last_id + 1});\r\n  set_task_list();\r\n}\r\n\r\n// Delete Task\r\nconst delete_task = () => {\r\n  if (app_data.length <= 1) {\r\n    alert(\"Cannot delete the last task.\");\r\n    return;\r\n  }\r\n\r\n  app_data.splice(select_id, 1); // Remove 1 element at the specified index\r\n\r\n  if (select_id >= app_data.length) {\r\n    select_id = app_data.length - 1; // Adjust select_id if it exceeds the array bounds\r\n  }\r\n\r\n  set_task();\r\n  set_task_list();\r\n  change_task(select_id + 1); // Load the next task\r\n};\r\n\r\n// Refresh Task\r\nconst refresh = () => {\r\n  app_data = [{\r\n    name:\"Task Name\", \r\n    task:[\r\n      {name: \"Task List\", is_completed: false, id: 1},\r\n    ], \r\n    id:1\r\n  },\r\n];\r\n\r\nselect_id = 0;\r\ndocument.getElementById('task_name').value=\"\";\r\ngrabDate.value = \"\";\r\ngrabTime.value = \"\";\r\nresetReminder.style.display = \"none\";\r\ngrabDate.style.display =\"none\";\r\ngrabTime.style.display = \"none\";\r\nstartReminder.style.display = \"inline-block\";\r\n\r\nset_task();\r\nset_task_list();\r\n}\r\n\r\n// display task name on reload\r\nset_task();\r\n// displays task list on reload\r\nset_task_list();\r\n\r\n// Reminder Section \r\nlet grabDate= document.getElementById('date');\r\nlet grabTime = document.getElementById('time');\r\nlet resetReminder = document.getElementById('reset');\r\nlet startReminder = document.getElementById('start_reminder');\r\nlet audioPlayer = document.getElementById('audio_player');\r\n\r\n\r\n// get the task name associated with the reminder\r\nconst setReminderToTask = () => {\r\n  const selectedTaskName = app_data[select_id].name;\r\n  const existingReminder = app_reminder.find(reminder => reminder.name === selectedTaskName);\r\n  const dateValue = grabDate.value.trim();\r\n  const timeValue = grabTime.value.trim();\r\n\r\n  if (dateValue !== '' && timeValue !== '') {\r\n    if (existingReminder) {\r\n      // existingReminder.date.push(dateValue);\r\n      // existingReminder.time.push(timeValue);\r\n    } else {\r\n      const reminder = {\r\n        name: selectedTaskName,\r\n        date: [dateValue],\r\n        time: [timeValue],\r\n        id: reminder_id + 1\r\n      };\r\n      app_reminder.push(reminder);\r\n      reminder_id++; // Increment the reminder_id for the next reminder\r\n    }\r\n\r\n    console.log(app_reminder);\r\n  }\r\n};\r\n\r\n\r\n// show date and time\r\nconst show_date_time = () => {\r\n  document.getElementById('schedule_time').style.marginTop = \"20px\";\r\n  grabDate.style.display = \"inline-block\";\r\n  grabTime.style.display = \"inline-block\";\r\n  startReminder.style.display = \"inline-block\";\r\n  resetReminder.style.display = \"inline-block\";\r\n}\r\n\r\n// Check alarm time\r\n// Function to check if alarm time is reached and play the alarm\r\nfunction checkAlarm() {\r\n  var now = new Date();\r\n  for (const reminder of app_reminder) {\r\n    for (let i = 0; i < reminder.date.length; i++) {\r\n      var alarmDate = parseDate(reminder.date[i]);\r\n      var alarmTime = parseTime(reminder.time[i]);\r\n\r\n      if (\r\n        alarmDate &&\r\n        alarmTime &&\r\n        alarmDate.getDate() === now.getDate() &&\r\n        alarmDate.getMonth() === now.getMonth() &&\r\n        alarmDate.getFullYear() === now.getFullYear() &&\r\n        alarmTime.getHours() === now.getHours() &&\r\n        alarmTime.getMinutes() === now.getMinutes()\r\n      ) {\r\n        // Alarm time reached for the current reminder\r\n        playAlarm();\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// Set interval to check the alarm every second\r\nsetInterval(checkAlarm, 1000);\r\n\r\n\r\n\r\n// Parse date value\r\nfunction parseDate(dateValue) {\r\n  if (typeof dateValue !== 'string' || dateValue.trim() === '') {\r\n    return null;\r\n  }\r\n\r\n  var dateParts = dateValue.split(\"-\");\r\n  if (dateParts.length === 3) {\r\n    var year = parseInt(dateParts[0]);\r\n    var month = parseInt(dateParts[1]) - 1; // Months are zero-based (0-11)\r\n    var day = parseInt(dateParts[2]);\r\n    return new Date(year, month, day);\r\n  }\r\n  return null;\r\n}\r\n\r\n// Parse time value\r\nfunction parseTime(timeValue) {\r\n  if (typeof timeValue !== 'string' || timeValue.trim() === '') {\r\n    return null;\r\n  }\r\n\r\n  var timeParts = timeValue.split(\":\");\r\n  if (timeParts.length === 2) {\r\n    var hours = parseInt(timeParts[0]);\r\n    var minutes = parseInt(timeParts[1]);\r\n    return new Date(1970, 0, 1, hours, minutes);\r\n  }\r\n  return null;\r\n}\r\n\r\n// Play alarm sound\r\nfunction playAlarm() {\r\n  if (audioPlayer.paused) {\r\n    audioPlayer.play().catch(function (error) {\r\n      console.log(\"Failed to play the audio: \" + error.message);\r\n    });\r\n  }\r\n}\r\n\r\n// Set the alarm\r\nfunction setAlarm() {\r\n  var alarmDate = parseDate(grabDate.value);\r\n  var alarmTime = parseTime(grabTime.value);\r\n\r\n  // Clear any existing alarm interval\r\n  clearInterval(alarmIntervalId);\r\n\r\n  // Set new alarm interval to check every second\r\n  alarmIntervalId = setInterval(checkAlarm, 1000);\r\n\r\n  if (alarmDate && alarmTime) {\r\n    console.log(\"Alarm set for: \" + alarmDate + \" \" + alarmTime);\r\n  } else {\r\n    console.log(\"Invalid date or time format\");\r\n  }\r\n\r\n  setReminderToTask();\r\n}\r\n\r\n\r\n// Clear the alarm\r\nfunction clearAlarm() {\r\n  const selectedTaskName = app_data[select_id].name;\r\n  const reminder = app_reminder.find(reminder => reminder.name === selectedTaskName);\r\n\r\n  clearInterval(alarmIntervalId);\r\n  if (audioPlayer) {\r\n    audioPlayer.pause();\r\n    audioPlayer.currentTime = 0;\r\n    grabDate.value = \"\";\r\n    grabTime.value = \"\";\r\n    grabDate.style.display = \"none\";\r\n    grabTime.style.display = \"none\";\r\n    resetReminder.style.display = \"none\";\r\n    reminder.date = \"\";\r\n    reminder.time = \"\";\r\n  }\r\n}\r\n\r\n\r\n// Attach event listeners\r\nstartReminder.addEventListener(\"click\", setAlarm);\r\nresetReminder.addEventListener(\"click\", clearAlarm);\r\n\r\n\r\n// change reminder time base on the task selected\r\nconst setReminder = () => {\r\n  const selectedTaskName = app_data[select_id].name;\r\n  const reminder = app_reminder.find(reminder => reminder.name === selectedTaskName);\r\n\r\n  if (reminder && reminder.date && reminder.time) {\r\n    grabDate.value = reminder.date; // Assuming grabDate is an input field\r\n    grabTime.value = reminder.time; // Assuming grabTime is an input field\r\n    startReminder.style.display = \"none\";\r\n  } else {\r\n    grabDate.value = \"\";\r\n    grabTime.value = \"\";\r\n  }\r\n};\r\n\r\n\r\n\r\n"],"file":"index.dev.js"}